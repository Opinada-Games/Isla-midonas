name: Deploy Minecraft Server with rsync

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 193.203.167.72 >> ~/.ssh/known_hosts

      - name: Ensure Remote Directory Exists
        run: |
          ssh root@193.203.167.72 "mkdir -p /home/minecraft/minecraft_server && chown -R minecraft:minecraft /home/minecraft"

      - name: Deploy Files Using rsync
        run: |
          rsync -avz --delete \
            --exclude='bluemap' \
            -e "ssh -i ~/.ssh/id_rsa" ./ root@193.203.167.72:/home/minecraft/minecraft_server/

      - name: Build and Run Docker on VPS
        run: |
          ssh root@193.203.167.72 << 'EOF'
            # Create necessary directories and user if not already present
            useradd -m -s /bin/bash minecraft || true
            mkdir -p /home/minecraft/minecraft_server
            chown -R minecraft:minecraft /home/minecraft

            # Move and unzip worlds.zip only if the world directory does not exist
            if [ ! -d /home/minecraft/minecraft_server/world ]; then
              if [ -f /home/root/minecraft_data/worlds.zip ]; then
                mv /home/root/minecraft_data/worlds.zip /home/minecraft/minecraft_server/
                unzip /home/minecraft/minecraft_server/worlds.zip -d /home/minecraft/minecraft_server/
                chown -R minecraft:minecraft /home/minecraft/minecraft_server/
                rm /home/minecraft/minecraft_server/worlds.zip
              else
                echo "worlds.zip not found in /home/root/minecraft_data!"
              fi
            else
              echo "World directory already exists. Skipping unzip."
            fi

            # Build and run the Docker container
            cd /home/minecraft/minecraft_server
            docker build -t minecraft-server .

            # Stop and remove the existing container if it exists
            docker stop minecraft_server || true
            docker rm minecraft_server || true

            # Run the Docker container with world and BlueMap data mounted
            docker run -d \
              -p 25565:25565 \
              -p 8100:8100 \
              -p 19132:19132/udp \
              -v /home/minecraft/minecraft_server/world:/home/minecraft/minecraft_server/world \
              -v /home/minecraft/minecraft_server/world_nether:/home/minecraft/minecraft_server/world_nether \
              -v /home/minecraft/minecraft_server/lobby:/home/minecraft/minecraft_server/lobby \
              -v /home/minecraft/minecraft_server/plugins/BlueMap:/home/minecraft/minecraft_server/plugins/BlueMap \
              --user minecraft \
              --name minecraft_server \
              minecraft-server
          EOF
