name: Check Geyser Updates and Create PR

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:  # Allows manual triggering for testing

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-geyser:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Get current Geyser version
        id: current_geyser
        run: |
          if [ -f "GEYSER_VERSION" ]; then
            CURRENT_VERSION=$(cat GEYSER_VERSION)
          else
            CURRENT_VERSION="none"
          fi
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Fetch latest Geyser version from API
        id: fetch_latest
        run: |
          LATEST_JSON=$(curl -s -H "Accept: application/json" "https://download.geysermc.org/v2/projects/geyser/versions/latest/builds/latest")
          echo "Raw JSON Response: $LATEST_JSON"
          
          if ! command -v jq &> /dev/null; then
            echo "jq not found, installing..."
            sudo apt update && sudo apt install -y jq
          fi

          LATEST_BUILD=$(echo "$LATEST_JSON" | jq -r '.build // empty')
          if [ -z "$LATEST_BUILD" ]; then
            echo "Error: Could not extract the latest build number!"
            exit 1
          fi
          echo "latest_build=$LATEST_BUILD" >> $GITHUB_OUTPUT

      - name: Compare versions and check for update
        id: compare
        run: |
          CURRENT=${{ steps.current_geyser.outputs.current_version }}
          LATEST=${{ steps.fetch_latest.outputs.latest_build }}
          echo "Current build: $CURRENT"
          echo "Latest build:  $LATEST"
          
          if [ "$CURRENT" = "$LATEST" ]; then
            echo "No update needed."
            exit 0
          else
            echo "Update available. Proceeding..."
          fi

      - name: Update GEYSER_VERSION file
        if: success()  # Only runs if the compare step did not exit 0 early
        run: |
          echo "${{ steps.fetch_latest.outputs.latest_build }}" > GEYSER_VERSION
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add GEYSER_VERSION
          git commit -m "Update GEYSER_VERSION to ${{ steps.fetch_latest.outputs.latest_build }}" || echo "No changes to commit."

      - name: Create Pull Request to Development
        if: success()  # Only run if update was needed
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: update-geyser-version
          base: Development
          title: "Update GEYSER_VERSION to ${{ steps.fetch_latest.outputs.latest_build }}"
          body: |
            A new Geyser build (${{ steps.fetch_latest.outputs.latest_build }}) has been detected.
            This PR updates the GEYSER_VERSION file accordingly.
